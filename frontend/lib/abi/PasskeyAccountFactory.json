{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "userId",
          "type": "string"
        }
      ],
      "name": "UserIdTaken",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "_userMap",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "credentialId",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accountImplementation",
      "outputs": [
        {
          "internalType": "contract PasskeyAccount",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "userId",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "credentialId",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "createAccount",
      "outputs": [
        {
          "internalType": "contract PasskeyAccount",
          "name": "ret",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "credentialId",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "userId",
          "type": "string"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "credentialId",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "y",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct PasskeyAccountFactory.User",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405234801561001057600080fd5b5060405161356a38038061356a83398101604081905261002f9161008d565b8060405161003c90610080565b6001600160a01b039091168152602001604051809103906000f080158015610068573d6000803e3d6000fd5b506001600160a01b039081166080521660a0526100bd565b6123ba806111b083390190565b60006020828403121561009f57600080fd5b81516001600160a01b03811681146100b657600080fd5b9392505050565b60805160a0516110c16100ef600039600061013701526000818160750152818161030a015261048f01526110c16000f3fe60806040523480156200001157600080fd5b50600436106200006a5760003560e01c806311464fbe146200006f57806331feb67114620000b45780636820b6e214620000da57806370f57d0814620000f15780639932afb21462000108578063b0d691fe1462000131575b600080fd5b620000977f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b620000cb620000c5366004620006a5565b62000159565b604051620000ab91906200073f565b62000097620000eb36600462000787565b62000272565b620000976200010236600462000815565b6200045d565b6200011f6200011936600462000889565b62000548565b604051620000ab949392919062000944565b620000977f000000000000000000000000000000000000000000000000000000000000000081565b620001856040518060800160405280606081526020016000815260200160008152602001600081525090565b600083836040516200019992919062000975565b9081526020016040518091039020604051806080016040529081600082018054620001c49062000985565b80601f0160208091040260200160405190810160405280929190818152602001828054620001f29062000985565b8015620002435780601f10620002175761010080835404028352916020019162000243565b820191906000526020600020905b8154815290600101906020018083116200022557829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481525050905092915050565b600080600089896040516200028992919062000975565b9081526040519081900360200190208054620002a59062000985565b90501115620002d65787876040516312134be960e11b8152600401620002cd929190620009ea565b60405180910390fd5b6000620002e787878787876200045d565b90506001600160a01b0381163b8015620003045750905062000452565b8360001b7f00000000000000000000000000000000000000000000000000000000000000008989898960405160240162000342949392919062000a08565b60408051601f198184030181529181526020820180516001600160e01b0316630cac862b60e21b1790525162000378906200064b565b6200038592919062000a31565b8190604051809103906000f5905080158015620003a6573d6000803e3d6000fd5b506040805160a06020601f8c018190040282018101909252608081018a81529295509182918b908b90819085018382808284376000920182905250938552505050602082018990526040808301899052606090920187905290516200040f908d908d9062000975565b908152604051908190036020019020815181906200042e908262000aaa565b50602082015160018201556040820151600282015560609091015160039091015550505b979650505050505050565b60006200053e8260001b6040518060200162000479906200064b565b6020820181038252601f19601f820116604052507f000000000000000000000000000000000000000000000000000000000000000089898989604051602401620004c7949392919062000a08565b60408051601f19818403018152918152602080830180516001600160e01b0316630cac862b60e21b1790529051620005029392910162000a31565b60408051601f198184030181529082905262000522929160200162000b77565b604051602081830303815290604052805190602001206200060b565b9695505050505050565b8051602081830181018051600082529282019190930120915280548190620005709062000985565b80601f01602080910402602001604051908101604052809291908181526020018280546200059e9062000985565b8015620005ef5780601f10620005c357610100808354040283529160200191620005ef565b820191906000526020600020905b815481529060010190602001808311620005d157829003601f168201915b5050505050908060010154908060020154908060030154905084565b60006200061a83833062000621565b9392505050565b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6104e18062000bab83390190565b60008083601f8401126200066c57600080fd5b50813567ffffffffffffffff8111156200068557600080fd5b6020830191508360208285010111156200069e57600080fd5b9250929050565b60008060208385031215620006b957600080fd5b823567ffffffffffffffff811115620006d157600080fd5b620006df8582860162000659565b90969095509350505050565b60005b8381101562000708578181015183820152602001620006ee565b50506000910152565b600081518084526200072b816020860160208601620006eb565b601f01601f19169290920160200192915050565b6020815260008251608060208401526200075d60a084018262000711565b90506020840151604084015260408401516060840152606084015160808401528091505092915050565b600080600080600080600060a0888a031215620007a357600080fd5b873567ffffffffffffffff80821115620007bc57600080fd5b620007ca8b838c0162000659565b909950975060208a0135915080821115620007e457600080fd5b50620007f38a828b0162000659565b989b979a50986040810135976060820135975060809091013595509350505050565b6000806000806000608086880312156200082e57600080fd5b853567ffffffffffffffff8111156200084657600080fd5b620008548882890162000659565b9099909850602088013597604081013597506060013595509350505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156200089c57600080fd5b813567ffffffffffffffff80821115620008b557600080fd5b818401915084601f830112620008ca57600080fd5b813581811115620008df57620008df62000873565b604051601f8201601f19908116603f011681019083821181831017156200090a576200090a62000873565b816040528281528760208487010111156200092457600080fd5b826020860160208301376000928101602001929092525095945050505050565b60808152600062000959608083018762000711565b6020830195909552506040810192909252606090910152919050565b8183823760009101908152919050565b600181811c908216806200099a57607f821691505b602082108103620009bb57634e487b7160e01b600052602260045260246000fd5b50919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208152600062000a00602083018486620009c1565b949350505050565b60608152600062000a1e606083018688620009c1565b6020830194909452506040015292915050565b6001600160a01b038316815260406020820181905260009062000a009083018462000711565b601f82111562000aa557600081815260208120601f850160051c8101602086101562000a805750805b601f850160051c820191505b8181101562000aa15782815560010162000a8c565b5050505b505050565b815167ffffffffffffffff81111562000ac75762000ac762000873565b62000adf8162000ad8845462000985565b8462000a57565b602080601f83116001811462000b17576000841562000afe5750858301515b600019600386901b1c1916600185901b17855562000aa1565b600085815260208120601f198616915b8281101562000b485788860151825594840194600190910190840162000b27565b508582101562000b675787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000835162000b8b818460208801620006eb565b83519083019062000ba1818360208801620006eb565b0194935050505056fe60806040526040516104e13803806104e1833981016040819052610022916102de565b61002e82826000610035565b50506103fb565b61003e83610061565b60008251118061004b5750805b1561005c5761005a83836100a1565b505b505050565b61006a816100cd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100c683836040518060600160405280602781526020016104ba60279139610180565b9392505050565b6001600160a01b0381163b61013f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080856001600160a01b03168560405161019d91906103ac565b600060405180830381855af49150503d80600081146101d8576040519150601f19603f3d011682016040523d82523d6000602084013e6101dd565b606091505b5090925090506101ef868383876101f9565b9695505050505050565b60608315610268578251600003610261576001600160a01b0385163b6102615760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610136565b5081610272565b610272838361027a565b949350505050565b81511561028a5781518083602001fd5b8060405162461bcd60e51b815260040161013691906103c8565b634e487b7160e01b600052604160045260246000fd5b60005b838110156102d55781810151838201526020016102bd565b50506000910152565b600080604083850312156102f157600080fd5b82516001600160a01b038116811461030857600080fd5b60208401519092506001600160401b038082111561032557600080fd5b818501915085601f83011261033957600080fd5b81518181111561034b5761034b6102a4565b604051601f8201601f19908116603f01168101908382118183101715610373576103736102a4565b8160405282815288602084870101111561038c57600080fd5b61039d8360208301602088016102ba565b80955050505050509250929050565b600082516103be8184602087016102ba565b9190910192915050565b60208152600082518060208401526103e78160408501602087016102ba565b601f01601f19169190910160400192915050565b60b1806104096000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea2646970667358221220f6563dae6af2ea76dfa06d42fc3e55fa974580cf537b60fd610f5e9cad74a0c564736f6c63430008150033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b5d606b4a4a29411037540a9c37069334065aab2dce8f418c0631838645c8b6064736f6c6343000815003360c0604052306080523480156200001557600080fd5b50604051620023ba380380620023ba833981016040819052620000389162000119565b6001600160a01b03811660a052806200005062000058565b50506200014b565b600054610100900460ff1615620000c55760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161462000117576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6000602082840312156200012c57600080fd5b81516001600160a01b03811681146200014457600080fd5b9392505050565b60805160a0516121fc620001be6000396000818161038901528181610857015281816108d801528181610bdf01528181610d3d01528181610d770152818161107201526114180152600081816106c00152818161070001528181610969015281816109a90152610a3c01526121fc6000f3fe60806040526004361061014e5760003560e01c806352d1902d116100b6578063b61d27f61161006f578063b61d27f6146103cd578063bc197c81146103ed578063c399ec881461041c578063c4d66de814610431578063d087d28814610451578063f23a6e611461046657600080fd5b806352d1902d146102fc5780638da5cb5b14610311578063a3c0f0b71461034f578063a56dfe4a14610364578063b0d691fe1461037a578063b3080c24146103ad57600080fd5b80633659cfe6116101085780633659cfe61461025f5780633a871cdd1461027f5780633a9410221461029f5780634a58db19146102c15780634d44560d146102c95780634f1ef286146102e957600080fd5b806223de291461015a57806301ffc9a7146101815780630c55699c146101b6578063150b7a02146101da57806318dfb3c71461021f57806332b218ac1461023f57600080fd5b3661015557005b600080fd5b34801561016657600080fd5b5061017f610175366004611702565b5050505050505050565b005b34801561018d57600080fd5b506101a161019c3660046117b2565b610493565b60405190151581526020015b60405180910390f35b3480156101c257600080fd5b506101cc60035481565b6040519081526020016101ad565b3480156101e657600080fd5b506102066101f53660046117dc565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101ad565b34801561022b57600080fd5b5061017f61023a366004611892565b6104e5565b34801561024b57600080fd5b5061017f61025a3660046118fd565b6105e5565b34801561026b57600080fd5b5061017f61027a36600461194d565b6106b6565b34801561028b57600080fd5b506101cc61029a36600461196a565b610795565b3480156102ab57600080fd5b506102b46107bb565b6040516101ad9190611a0d565b61017f610855565b3480156102d557600080fd5b5061017f6102e4366004611a20565b6108ce565b61017f6102f7366004611aee565b61095f565b34801561030857600080fd5b506101cc610a2f565b34801561031d57600080fd5b50600054610337906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020016101ad565b34801561035b57600080fd5b506102b4610ae2565b34801561037057600080fd5b506101cc60045481565b34801561038657600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610337565b3480156103b957600080fd5b50600154610337906001600160a01b031681565b3480156103d957600080fd5b5061017f6103e8366004611b3d565b610b70565b3480156103f957600080fd5b50610206610408366004611b8c565b63bc197c8160e01b98975050505050505050565b34801561042857600080fd5b506101cc610bbf565b34801561043d57600080fd5b5061017f61044c36600461194d565b610c4b565b34801561045d57600080fd5b506101cc610d16565b34801561047257600080fd5b50610206610481366004611c29565b63f23a6e6160e01b9695505050505050565b60006001600160e01b03198216630a85bd0160e11b14806104c457506001600160e01b03198216630271189760e51b145b806104df57506001600160e01b031982166301ffc9a760e01b145b92915050565b6104ed610d6c565b8281146105375760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b60448201526064015b60405180910390fd5b60005b838110156105de576105cc85858381811061055757610557611ca4565b905060200201602081019061056c919061194d565b600085858581811061058057610580611ca4565b90506020028101906105929190611cba565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e0192505050565b806105d681611d16565b91505061053a565b5050505050565b600054610100900460ff16158080156106055750600054600160ff909116105b8061061f5750303b15801561061f575060005460ff166001145b61063b5760405162461bcd60e51b815260040161052e90611d2f565b6000805460ff19166001179055801561065e576000805461ff0019166101001790555b61066a85858585610e71565b80156105de576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106fe5760405162461bcd60e51b815260040161052e90611d7d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610747600080516020612180833981519152546001600160a01b031690565b6001600160a01b03161461076d5760405162461bcd60e51b815260040161052e90611dc9565b61077681610eef565b6040805160008082526020820190925261079291839190610ef7565b50565b600061079f611067565b6107a984846110df565b90506107b4826111f1565b9392505050565b6060610850600280546107cd90611e15565b80601f01602080910402602001604051908101604052809291908181526020018280546107f990611e15565b80156108465780601f1061081b57610100808354040283529160200191610846565b820191906000526020600020905b81548152906001019060200180831161082957829003601f168201915b505050505061123e565b905090565b7f000000000000000000000000000000000000000000000000000000000000000060405163b760faf960e01b81523060048201526001600160a01b03919091169063b760faf99034906024016000604051808303818588803b1580156108ba57600080fd5b505af11580156105de573d6000803e3d6000fd5b6108d661138e565b7f000000000000000000000000000000000000000000000000000000000000000060405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561094357600080fd5b505af1158015610957573d6000803e3d6000fd5b505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036109a75760405162461bcd60e51b815260040161052e90611d7d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109f0600080516020612180833981519152546001600160a01b031690565b6001600160a01b031614610a165760405162461bcd60e51b815260040161052e90611dc9565b610a1f82610eef565b610a2b82826001610ef7565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610acf5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161052e565b5060008051602061218083398151915290565b60028054610aef90611e15565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1b90611e15565b8015610b685780601f10610b3d57610100808354040283529160200191610b68565b820191906000526020600020905b815481529060010190602001808311610b4b57829003601f168201915b505050505081565b610b78610d6c565b610bb9848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e0192505050565b50505050565b6040516370a0823160e01b81523060048201526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610c27573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108509190611e4f565b600054610100900460ff1615808015610c6b5750600054600160ff909116105b80610c855750303b158015610c85575060005460ff166001145b610ca15760405162461bcd60e51b815260040161052e90611d2f565b6000805460ff191660011790558015610cc4576000805461ff0019166101001790555b610ccd826113e5565b8015610a2b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b604051631aab3f0d60e11b8152306004820152600060248201819052906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610c0a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610db357506000546201000090046001600160a01b031633145b610dff5760405162461bcd60e51b815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74604482015260640161052e565b565b600080846001600160a01b03168484604051610e1d9190611e68565b60006040518083038185875af1925050503d8060008114610e5a576040519150601f19603f3d011682016040523d82523d6000602084013e610e5f565b606091505b5091509150816105de57805160208201fd5b6002610e7e848683611eca565b5060038290556004819055604051610e999085908590611f89565b604080519182900382206001548584526020840185905290926001600160a01b03909116917f562b46be01faa994ee33fb2e0d2d0c590485d868a8a9530f2ffcc358fac9b4a4910160405180910390a350505050565b61079261138e565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610f2f57610f2a83611461565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f89575060408051601f3d908101601f19168201909252610f8691810190611e4f565b60015b610fec5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161052e565b600080516020612180833981519152811461105b5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161052e565b50610f2a8383836114fd565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610dff5760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161052e565b600080808080806110f4610140890189611cba565b8101906111019190611f99565b9450945094509450945073__$eddac704ea561f709bda1d230e69de3079$__6385f7590e60405180608001604052808a60405160200161114391815260200190565b60405160208183030381529060405281526020018681526020018581526020018481525087876003546004546040518663ffffffff1660e01b815260040161118f959493929190612034565b602060405180830381865af41580156111ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d091906120d1565b156111e3576000955050505050506104df565b506001979650505050505050565b801561079257604051600090339060001990849084818181858888f193505050503d80600081146105de576040519150601f19603f3d011682016040523d82523d6000602084013e6105de565b6060815160000361125d57505060408051602081019091526000815290565b6000604051806060016040528060408152602001612140604091399050600060038451600261128c91906120f3565b6112969190612106565b6112a1906004612128565b6001600160401b038111156112b8576112b8611a4c565b6040519080825280601f01601f1916602001820160405280156112e2576020820181803683370190505b509050600182016020820185865187015b8082101561134e576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f81168501518453506001830192506112f3565b505060038651066001811461136a57600281146113755761137c565b60028203915061137c565b6001820391505b50829003601f19018252509392505050565b6000546201000090046001600160a01b03163314806113ac57503330145b610dff5760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b604482015260640161052e565b6000805462010000600160b01b031916620100006001600160a01b038481168202929092178084556040519190048216927f0000000000000000000000000000000000000000000000000000000000000000909216917f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de91a350565b6001600160a01b0381163b6114ce5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161052e565b60008051602061218083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61150683611522565b6000825111806115135750805b15610f2a57610bb98383611562565b61152b81611461565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606107b483836040518060600160405280602781526020016121a0602791396060600080856001600160a01b03168560405161159f9190611e68565b600060405180830381855af49150503d80600081146115da576040519150601f19603f3d011682016040523d82523d6000602084013e6115df565b606091505b50915091506115f0868383876115fa565b9695505050505050565b60608315611669578251600003611662576001600160a01b0385163b6116625760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161052e565b5081611673565b611673838361167b565b949350505050565b81511561168b5781518083602001fd5b8060405162461bcd60e51b815260040161052e9190611a0d565b6001600160a01b038116811461079257600080fd5b60008083601f8401126116cc57600080fd5b5081356001600160401b038111156116e357600080fd5b6020830191508360208285010111156116fb57600080fd5b9250929050565b60008060008060008060008060c0898b03121561171e57600080fd5b8835611729816116a5565b97506020890135611739816116a5565b96506040890135611749816116a5565b95506060890135945060808901356001600160401b038082111561176c57600080fd5b6117788c838d016116ba565b909650945060a08b013591508082111561179157600080fd5b5061179e8b828c016116ba565b999c989b5096995094979396929594505050565b6000602082840312156117c457600080fd5b81356001600160e01b0319811681146107b457600080fd5b6000806000806000608086880312156117f457600080fd5b85356117ff816116a5565b9450602086013561180f816116a5565b93506040860135925060608601356001600160401b0381111561183157600080fd5b61183d888289016116ba565b969995985093965092949392505050565b60008083601f84011261186057600080fd5b5081356001600160401b0381111561187757600080fd5b6020830191508360208260051b85010111156116fb57600080fd5b600080600080604085870312156118a857600080fd5b84356001600160401b03808211156118bf57600080fd5b6118cb8883890161184e565b909650945060208701359150808211156118e457600080fd5b506118f18782880161184e565b95989497509550505050565b6000806000806060858703121561191357600080fd5b84356001600160401b0381111561192957600080fd5b611935878288016116ba565b90989097506020870135966040013595509350505050565b60006020828403121561195f57600080fd5b81356107b4816116a5565b60008060006060848603121561197f57600080fd5b83356001600160401b0381111561199557600080fd5b840161016081870312156119a857600080fd5b95602085013595506040909401359392505050565b60005b838110156119d85781810151838201526020016119c0565b50506000910152565b600081518084526119f98160208601602086016119bd565b601f01601f19169290920160200192915050565b6020815260006107b460208301846119e1565b60008060408385031215611a3357600080fd5b8235611a3e816116a5565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a7357600080fd5b81356001600160401b0380821115611a8d57611a8d611a4c565b604051601f8301601f19908116603f01168101908282118183101715611ab557611ab5611a4c565b81604052838152866020858801011115611ace57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611b0157600080fd5b8235611b0c816116a5565b915060208301356001600160401b03811115611b2757600080fd5b611b3385828601611a62565b9150509250929050565b60008060008060608587031215611b5357600080fd5b8435611b5e816116a5565b93506020850135925060408501356001600160401b03811115611b8057600080fd5b6118f1878288016116ba565b60008060008060008060008060a0898b031215611ba857600080fd5b8835611bb3816116a5565b97506020890135611bc3816116a5565b965060408901356001600160401b0380821115611bdf57600080fd5b611beb8c838d0161184e565b909850965060608b0135915080821115611c0457600080fd5b611c108c838d0161184e565b909650945060808b013591508082111561179157600080fd5b60008060008060008060a08789031215611c4257600080fd5b8635611c4d816116a5565b95506020870135611c5d816116a5565b9450604087013593506060870135925060808701356001600160401b03811115611c8657600080fd5b611c9289828a016116ba565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611cd157600080fd5b8301803591506001600160401b03821115611ceb57600080fd5b6020019150368190038213156116fb57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611d2857611d28611d00565b5060010190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600181811c90821680611e2957607f821691505b602082108103611e4957634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611e6157600080fd5b5051919050565b60008251611e7a8184602087016119bd565b9190910192915050565b601f821115610f2a57600081815260208120601f850160051c81016020861015611eab5750805b601f850160051c820191505b8181101561095757828155600101611eb7565b6001600160401b03831115611ee157611ee1611a4c565b611ef583611eef8354611e15565b83611e84565b6000601f841160018114611f295760008515611f115750838201355b600019600387901b1c1916600186901b1783556105de565b600083815260209020601f19861690835b82811015611f5a5786850135825560209485019460019092019101611f3a565b5086821015611f775760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8183823760009101908152919050565b600080600080600060a08688031215611fb157600080fd5b853594506020860135935060408601356001600160401b0380821115611fd657600080fd5b611fe289838a01611a62565b94506060880135915080821115611ff857600080fd5b61200489838a01611a62565b9350608088013591508082111561201a57600080fd5b5061202788828901611a62565b9150509295509295909350565b60a0815260008651608060a08401526120516101208401826119e1565b90506020880151609f19808584030160c086015261206f83836119e1565b925060408a01519150808584030160e086015261208c83836119e1565b925060608a015191508085840301610100860152506120ab82826119e1565b925050508560208301528460408301528360608301528260808301529695505050505050565b6000602082840312156120e357600080fd5b815180151581146107b457600080fd5b808201808211156104df576104df611d00565b60008261212357634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176104df576104df611d0056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122043607daf0e7e1d505aa4306075fa7de72d2b2321e7dd3d29de65882e3e53d90364736f6c63430008150033",
    "sourceMap": "602:2861:65:-:0;;;960:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1050:11;1031:31;;;;;:::i;:::-;-1:-1:-1;;;;;511:32:70;;;493:51;;481:2;466:18;1031:31:65;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1007:55:65;;;;;1072:24;;;602:2861;;;;;;;;;;:::o;14:309:70:-;103:6;156:2;144:9;135:7;131:23;127:32;124:52;;;172:1;169;162:12;124:52;198:16;;-1:-1:-1;;;;;243:31:70;;233:42;;223:70;;289:1;286;279:12;223:70;312:5;14:309;-1:-1:-1;;;14:309:70:o;328:222::-;602:2861:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/lib/p256-verifier/P256.sol": {
        "P256": [
          {
            "start": 9339,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600436106200006a5760003560e01c806311464fbe146200006f57806331feb67114620000b45780636820b6e214620000da57806370f57d0814620000f15780639932afb21462000108578063b0d691fe1462000131575b600080fd5b620000977f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b620000cb620000c5366004620006a5565b62000159565b604051620000ab91906200073f565b62000097620000eb36600462000787565b62000272565b620000976200010236600462000815565b6200045d565b6200011f6200011936600462000889565b62000548565b604051620000ab949392919062000944565b620000977f000000000000000000000000000000000000000000000000000000000000000081565b620001856040518060800160405280606081526020016000815260200160008152602001600081525090565b600083836040516200019992919062000975565b9081526020016040518091039020604051806080016040529081600082018054620001c49062000985565b80601f0160208091040260200160405190810160405280929190818152602001828054620001f29062000985565b8015620002435780601f10620002175761010080835404028352916020019162000243565b820191906000526020600020905b8154815290600101906020018083116200022557829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481525050905092915050565b600080600089896040516200028992919062000975565b9081526040519081900360200190208054620002a59062000985565b90501115620002d65787876040516312134be960e11b8152600401620002cd929190620009ea565b60405180910390fd5b6000620002e787878787876200045d565b90506001600160a01b0381163b8015620003045750905062000452565b8360001b7f00000000000000000000000000000000000000000000000000000000000000008989898960405160240162000342949392919062000a08565b60408051601f198184030181529181526020820180516001600160e01b0316630cac862b60e21b1790525162000378906200064b565b6200038592919062000a31565b8190604051809103906000f5905080158015620003a6573d6000803e3d6000fd5b506040805160a06020601f8c018190040282018101909252608081018a81529295509182918b908b90819085018382808284376000920182905250938552505050602082018990526040808301899052606090920187905290516200040f908d908d9062000975565b908152604051908190036020019020815181906200042e908262000aaa565b50602082015160018201556040820151600282015560609091015160039091015550505b979650505050505050565b60006200053e8260001b6040518060200162000479906200064b565b6020820181038252601f19601f820116604052507f000000000000000000000000000000000000000000000000000000000000000089898989604051602401620004c7949392919062000a08565b60408051601f19818403018152918152602080830180516001600160e01b0316630cac862b60e21b1790529051620005029392910162000a31565b60408051601f198184030181529082905262000522929160200162000b77565b604051602081830303815290604052805190602001206200060b565b9695505050505050565b8051602081830181018051600082529282019190930120915280548190620005709062000985565b80601f01602080910402602001604051908101604052809291908181526020018280546200059e9062000985565b8015620005ef5780601f10620005c357610100808354040283529160200191620005ef565b820191906000526020600020905b815481529060010190602001808311620005d157829003601f168201915b5050505050908060010154908060020154908060030154905084565b60006200061a83833062000621565b9392505050565b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6104e18062000bab83390190565b60008083601f8401126200066c57600080fd5b50813567ffffffffffffffff8111156200068557600080fd5b6020830191508360208285010111156200069e57600080fd5b9250929050565b60008060208385031215620006b957600080fd5b823567ffffffffffffffff811115620006d157600080fd5b620006df8582860162000659565b90969095509350505050565b60005b8381101562000708578181015183820152602001620006ee565b50506000910152565b600081518084526200072b816020860160208601620006eb565b601f01601f19169290920160200192915050565b6020815260008251608060208401526200075d60a084018262000711565b90506020840151604084015260408401516060840152606084015160808401528091505092915050565b600080600080600080600060a0888a031215620007a357600080fd5b873567ffffffffffffffff80821115620007bc57600080fd5b620007ca8b838c0162000659565b909950975060208a0135915080821115620007e457600080fd5b50620007f38a828b0162000659565b989b979a50986040810135976060820135975060809091013595509350505050565b6000806000806000608086880312156200082e57600080fd5b853567ffffffffffffffff8111156200084657600080fd5b620008548882890162000659565b9099909850602088013597604081013597506060013595509350505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156200089c57600080fd5b813567ffffffffffffffff80821115620008b557600080fd5b818401915084601f830112620008ca57600080fd5b813581811115620008df57620008df62000873565b604051601f8201601f19908116603f011681019083821181831017156200090a576200090a62000873565b816040528281528760208487010111156200092457600080fd5b826020860160208301376000928101602001929092525095945050505050565b60808152600062000959608083018762000711565b6020830195909552506040810192909252606090910152919050565b8183823760009101908152919050565b600181811c908216806200099a57607f821691505b602082108103620009bb57634e487b7160e01b600052602260045260246000fd5b50919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208152600062000a00602083018486620009c1565b949350505050565b60608152600062000a1e606083018688620009c1565b6020830194909452506040015292915050565b6001600160a01b038316815260406020820181905260009062000a009083018462000711565b601f82111562000aa557600081815260208120601f850160051c8101602086101562000a805750805b601f850160051c820191505b8181101562000aa15782815560010162000a8c565b5050505b505050565b815167ffffffffffffffff81111562000ac75762000ac762000873565b62000adf8162000ad8845462000985565b8462000a57565b602080601f83116001811462000b17576000841562000afe5750858301515b600019600386901b1c1916600185901b17855562000aa1565b600085815260208120601f198616915b8281101562000b485788860151825594840194600190910190840162000b27565b508582101562000b675787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000835162000b8b818460208801620006eb565b83519083019062000ba1818360208801620006eb565b0194935050505056fe60806040526040516104e13803806104e1833981016040819052610022916102de565b61002e82826000610035565b50506103fb565b61003e83610061565b60008251118061004b5750805b1561005c5761005a83836100a1565b505b505050565b61006a816100cd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100c683836040518060600160405280602781526020016104ba60279139610180565b9392505050565b6001600160a01b0381163b61013f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080856001600160a01b03168560405161019d91906103ac565b600060405180830381855af49150503d80600081146101d8576040519150601f19603f3d011682016040523d82523d6000602084013e6101dd565b606091505b5090925090506101ef868383876101f9565b9695505050505050565b60608315610268578251600003610261576001600160a01b0385163b6102615760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610136565b5081610272565b610272838361027a565b949350505050565b81511561028a5781518083602001fd5b8060405162461bcd60e51b815260040161013691906103c8565b634e487b7160e01b600052604160045260246000fd5b60005b838110156102d55781810151838201526020016102bd565b50506000910152565b600080604083850312156102f157600080fd5b82516001600160a01b038116811461030857600080fd5b60208401519092506001600160401b038082111561032557600080fd5b818501915085601f83011261033957600080fd5b81518181111561034b5761034b6102a4565b604051601f8201601f19908116603f01168101908382118183101715610373576103736102a4565b8160405282815288602084870101111561038c57600080fd5b61039d8360208301602088016102ba565b80955050505050509250929050565b600082516103be8184602087016102ba565b9190910192915050565b60208152600082518060208401526103e78160408501602087016102ba565b601f01601f19169190910160400192915050565b60b1806104096000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea2646970667358221220f6563dae6af2ea76dfa06d42fc3e55fa974580cf537b60fd610f5e9cad74a0c564736f6c63430008150033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b5d606b4a4a29411037540a9c37069334065aab2dce8f418c0631838645c8b6064736f6c63430008150033",
    "sourceMap": "602:2861:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;791:53;;;;;;;;-1:-1:-1;;;;;210:32:70;;;192:51;;180:2;165:18;791:53:65;;;;;;;;3344:117;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1483:999::-;;;;;;:::i;:::-;;:::i;2607:727::-;;;;;;:::i;:::-;;:::i;896:39::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;850:::-;;;;;3344:117;3408:11;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3408:11:65;3438:8;3447:6;;3438:16;;;;;;;:::i;:::-;;;;;;;;;;;;;3431:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3344:117;;;;:::o;1483:999::-;1657:18;1730:1;1691:8;1700:6;;1691:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;:36;;;;;:::i;:::-;;;:40;1687:97;;;1766:6;;1754:19;;-1:-1:-1;;;1754:19:65;;;;;;;;;:::i;:::-;;;;;;;;1687:97;1794:12;1809:36;1820:12;;1834:1;1837;1840:4;1809:10;:36::i;:::-;1794:51;-1:-1:-1;;;;;;1871:16:65;;;1901:12;;1897:79;;-1:-1:-1;1959:4:65;-1:-1:-1;1929:36:65;;1897:79;2075:4;2067:13;;2111:21;2247:12;;2261:1;2264;2155:133;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2155:133:65;;;;;;;;;;;;;;-1:-1:-1;;;;;2155:133:65;-1:-1:-1;;;2155:133:65;;;2044:262;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2359:116:65;;;;;;;;;;;;;;;;;;;;;;;;;1985:345;;-1:-1:-1;2359:116:65;;;2392:12;;;;;;2359:116;;2392:12;;;;2359:116;;;;;;;;-1:-1:-1;2359:116:65;;;-1:-1:-1;;;2359:116:65;;;;;;;;;;;;;;;;;;;;2340:16;;;;2349:6;;;;2340:16;:::i;:::-;;;;;;;;;;;;;;:135;;:16;;:135;;:16;:135;:::i;:::-;-1:-1:-1;2340:135:65;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1483:999:65;;;;;;;;;;:::o;2607:727::-;2751:7;2789:538;2837:4;2829:13;;2933:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3038:21;3198:12;;3212:1;3215;3090:157;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3090:157:65;;;;;;;;;;;;;;;-1:-1:-1;;;;;3090:157:65;-1:-1:-1;;;3090:157:65;;;2990:283;;;;;3090:157;2990:283;;:::i;:::-;;;;-1:-1:-1;;2990:283:65;;;;;;;;;;2891:404;;;2990:283;2891:404;;:::i;:::-;;;;;;;;;;;;;2860:453;;;;;;2789:22;:538::i;:::-;2770:557;2607:727;-1:-1:-1;;;;;;2607:727:65:o;896:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1769:165:53:-;1852:7;1878:49;1893:4;1899:12;1921:4;1878:14;:49::i;:::-;1871:56;1769:165;-1:-1:-1;;;1769:165:53:o;2177:1772::-;2278:12;2385:4;2379:11;3604:12;3597:4;3592:3;3588:14;3581:36;3653:4;3646;3641:3;3637:14;3630:28;3683:8;3678:3;3671:21;3776:4;3771:3;3767:14;3754:27;;3887:4;3880:5;3872:20;3930:2;3913:20;;;2177:1772;-1:-1:-1;;;;2177:1772:53:o;-1:-1:-1:-;;;;;;;;:::o;254:348:70:-;306:8;316:6;370:3;363:4;355:6;351:17;347:27;337:55;;388:1;385;378:12;337:55;-1:-1:-1;411:20:70;;454:18;443:30;;440:50;;;486:1;483;476:12;440:50;523:4;515:6;511:17;499:29;;575:3;568:4;559:6;551;547:19;543:30;540:39;537:59;;;592:1;589;582:12;537:59;254:348;;;;;:::o;607:411::-;678:6;686;739:2;727:9;718:7;714:23;710:32;707:52;;;755:1;752;745:12;707:52;795:9;782:23;828:18;820:6;817:30;814:50;;;860:1;857;850:12;814:50;899:59;950:7;941:6;930:9;926:22;899:59;:::i;:::-;977:8;;873:85;;-1:-1:-1;607:411:70;-1:-1:-1;;;;607:411:70:o;1023:250::-;1108:1;1118:113;1132:6;1129:1;1126:13;1118:113;;;1208:11;;;1202:18;1189:11;;;1182:39;1154:2;1147:10;1118:113;;;-1:-1:-1;;1265:1:70;1247:16;;1240:27;1023:250::o;1278:270::-;1319:3;1357:5;1351:12;1384:6;1379:3;1372:19;1400:76;1469:6;1462:4;1457:3;1453:14;1446:4;1439:5;1435:16;1400:76;:::i;:::-;1530:2;1509:15;-1:-1:-1;;1505:29:70;1496:39;;;;1537:4;1492:50;;1278:270;-1:-1:-1;;1278:270:70:o;1553:543::-;1728:2;1717:9;1710:21;1691:4;1766:6;1760:13;1809:4;1804:2;1793:9;1789:18;1782:32;1837:51;1883:3;1872:9;1868:19;1854:12;1837:51;:::i;:::-;1823:65;;1942:2;1934:6;1930:15;1924:22;1919:2;1908:9;1904:18;1897:50;2001:2;1993:6;1989:15;1983:22;1978:2;1967:9;1963:18;1956:50;2062:2;2054:6;2050:15;2044:22;2037:4;2026:9;2022:20;2015:52;2084:6;2076:14;;;1553:543;;;;:::o;2101:926::-;2219:6;2227;2235;2243;2251;2259;2267;2320:3;2308:9;2299:7;2295:23;2291:33;2288:53;;;2337:1;2334;2327:12;2288:53;2377:9;2364:23;2406:18;2447:2;2439:6;2436:14;2433:34;;;2463:1;2460;2453:12;2433:34;2502:59;2553:7;2544:6;2533:9;2529:22;2502:59;:::i;:::-;2580:8;;-1:-1:-1;2476:85:70;-1:-1:-1;2668:2:70;2653:18;;2640:32;;-1:-1:-1;2684:16:70;;;2681:36;;;2713:1;2710;2703:12;2681:36;;2752:61;2805:7;2794:8;2783:9;2779:24;2752:61;:::i;:::-;2101:926;;;;-1:-1:-1;2832:8:70;2914:2;2899:18;;2886:32;;2965:2;2950:18;;2937:32;;-1:-1:-1;3016:3:70;3001:19;;;2988:33;;-1:-1:-1;2101:926:70;-1:-1:-1;;;;2101:926:70:o;3032:615::-;3129:6;3137;3145;3153;3161;3214:3;3202:9;3193:7;3189:23;3185:33;3182:53;;;3231:1;3228;3221:12;3182:53;3271:9;3258:23;3304:18;3296:6;3293:30;3290:50;;;3336:1;3333;3326:12;3290:50;3375:59;3426:7;3417:6;3406:9;3402:22;3375:59;:::i;:::-;3453:8;;3349:85;;-1:-1:-1;3535:2:70;3520:18;;3507:32;;3586:2;3571:18;;3558:32;;-1:-1:-1;3637:2:70;3622:18;3609:32;;-1:-1:-1;3032:615:70;-1:-1:-1;;;;3032:615:70:o;3860:127::-;3921:10;3916:3;3912:20;3909:1;3902:31;3952:4;3949:1;3942:15;3976:4;3973:1;3966:15;3992:922;4061:6;4114:2;4102:9;4093:7;4089:23;4085:32;4082:52;;;4130:1;4127;4120:12;4082:52;4170:9;4157:23;4199:18;4240:2;4232:6;4229:14;4226:34;;;4256:1;4253;4246:12;4226:34;4294:6;4283:9;4279:22;4269:32;;4339:7;4332:4;4328:2;4324:13;4320:27;4310:55;;4361:1;4358;4351:12;4310:55;4397:2;4384:16;4419:2;4415;4412:10;4409:36;;;4425:18;;:::i;:::-;4500:2;4494:9;4468:2;4554:13;;-1:-1:-1;;4550:22:70;;;4574:2;4546:31;4542:40;4530:53;;;4598:18;;;4618:22;;;4595:46;4592:72;;;4644:18;;:::i;:::-;4684:10;4680:2;4673:22;4719:2;4711:6;4704:18;4759:7;4754:2;4749;4745;4741:11;4737:20;4734:33;4731:53;;;4780:1;4777;4770:12;4731:53;4836:2;4831;4827;4823:11;4818:2;4810:6;4806:15;4793:46;4881:1;4859:15;;;4876:2;4855:24;4848:35;;;;-1:-1:-1;4863:6:70;3992:922;-1:-1:-1;;;;;3992:922:70:o;4919:432::-;5150:3;5139:9;5132:22;5113:4;5171:45;5211:3;5200:9;5196:19;5188:6;5171:45;:::i;:::-;5247:2;5232:18;;5225:34;;;;-1:-1:-1;5290:2:70;5275:18;;5268:34;;;;5333:2;5318:18;;;5311:34;5163:53;4919:432;-1:-1:-1;4919:432:70:o;5583:273::-;5768:6;5760;5755:3;5742:33;5724:3;5794:16;;5819:13;;;5794:16;5583:273;-1:-1:-1;5583:273:70:o;5861:380::-;5940:1;5936:12;;;;5983;;;6004:61;;6058:4;6050:6;6046:17;6036:27;;6004:61;6111:2;6103:6;6100:14;6080:18;6077:38;6074:161;;6157:10;6152:3;6148:20;6145:1;6138:31;6192:4;6189:1;6182:15;6220:4;6217:1;6210:15;6074:161;;5861:380;;;:::o;6246:267::-;6335:6;6330:3;6323:19;6387:6;6380:5;6373:4;6368:3;6364:14;6351:43;-1:-1:-1;6439:1:70;6414:16;;;6432:4;6410:27;;;6403:38;;;;6495:2;6474:15;;;-1:-1:-1;;6470:29:70;6461:39;;;6457:50;;6246:267::o;6518:247::-;6677:2;6666:9;6659:21;6640:4;6697:62;6755:2;6744:9;6740:18;6732:6;6724;6697:62;:::i;:::-;6689:70;6518:247;-1:-1:-1;;;;6518:247:70:o;6770:387::-;6983:2;6972:9;6965:21;6946:4;7003:62;7061:2;7050:9;7046:18;7038:6;7030;7003:62;:::i;:::-;7096:2;7081:18;;7074:34;;;;-1:-1:-1;7139:2:70;7124:18;7117:34;6995:70;6770:387;-1:-1:-1;;6770:387:70:o;7162:314::-;-1:-1:-1;;;;;7337:32:70;;7319:51;;7406:2;7401;7386:18;;7379:30;;;-1:-1:-1;;7426:44:70;;7451:18;;7443:6;7426:44;:::i;7606:544::-;7707:2;7702:3;7699:11;7696:448;;;7743:1;7768:5;7764:2;7757:17;7813:4;7809:2;7799:19;7883:2;7871:10;7867:19;7864:1;7860:27;7854:4;7850:38;7919:4;7907:10;7904:20;7901:47;;;-1:-1:-1;7942:4:70;7901:47;7997:2;7992:3;7988:12;7985:1;7981:20;7975:4;7971:31;7961:41;;8052:82;8070:2;8063:5;8060:13;8052:82;;;8115:17;;;8096:1;8085:13;8052:82;;;8056:3;;;7696:448;7606:544;;;:::o;8326:1348::-;8450:3;8444:10;8477:18;8469:6;8466:30;8463:56;;;8499:18;;:::i;:::-;8528:96;8617:6;8577:38;8609:4;8603:11;8577:38;:::i;:::-;8571:4;8528:96;:::i;:::-;8679:4;;8743:2;8732:14;;8760:1;8755:662;;;;9461:1;9478:6;9475:89;;;-1:-1:-1;9530:19:70;;;9524:26;9475:89;-1:-1:-1;;8283:1:70;8279:11;;;8275:24;8271:29;8261:40;8307:1;8303:11;;;8258:57;9577:81;;8725:943;;8755:662;7553:1;7546:14;;;7590:4;7577:18;;-1:-1:-1;;8791:20:70;;;8908:236;8922:7;8919:1;8916:14;8908:236;;;9011:19;;;9005:26;8990:42;;9103:27;;;;9071:1;9059:14;;;;8938:19;;8908:236;;;8912:3;9172:6;9163:7;9160:19;9157:201;;;9233:19;;;9227:26;-1:-1:-1;;9316:1:70;9312:14;;;9328:3;9308:24;9304:37;9300:42;9285:58;9270:74;;9157:201;-1:-1:-1;;;;;9404:1:70;9388:14;;;9384:22;9371:36;;-1:-1:-1;8326:1348:70:o;9679:492::-;9854:3;9892:6;9886:13;9908:66;9967:6;9962:3;9955:4;9947:6;9943:17;9908:66;:::i;:::-;10037:13;;9996:16;;;;10059:70;10037:13;9996:16;10106:4;10094:17;;10059:70;:::i;:::-;10145:20;;9679:492;-1:-1:-1;;;;9679:492:70:o",
    "linkReferences": {},
    "immutableReferences": {
      "50243": [
        {
          "start": 117,
          "length": 32
        },
        {
          "start": 778,
          "length": 32
        },
        {
          "start": 1167,
          "length": 32
        }
      ],
      "50246": [
        {
          "start": 311,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "_userMap(string)": "9932afb2",
    "accountImplementation()": "11464fbe",
    "createAccount(string,bytes,uint256,uint256,uint256)": "6820b6e2",
    "entryPoint()": "b0d691fe",
    "getAddress(bytes,uint256,uint256,uint256)": "70f57d08",
    "getUser(string)": "31feb671"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"}],\"name\":\"UserIdTaken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"_userMap\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"credentialId\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"contract PasskeyAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"credentialId\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"contract PasskeyAccount\",\"name\":\"ret\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"credentialId\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"}],\"name\":\"getUser\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"credentialId\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct PasskeyAccountFactory.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAccount(string,bytes,uint256,uint256,uint256)\":{\"notice\":\"create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\"},\"getAddress(bytes,uint256,uint256,uint256)\":{\"notice\":\"calculate the counterfactual address of this account as it would be returned by createAccount()\"}},\"notice\":\"A sample factory contract for PasskeyAccount A UserOperations \\\"initCode\\\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PasskeyAccountFactory.sol\":\"PasskeyAccountFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@account-abstraction/=lib/account-abstraction/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x5eb3253b32fd8ba8ae7b9d83da8e9924254a4d3d17a8772b41280e8572974b3c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b2d23d1276f85300e2ad0c7219614a072796b4f5581fd552b0bcaa47904400d3\",\"dweb:/ipfs/QmVWK5WZ3VskNTfCBxLqY4xBP7WGm3cRM9Qhdy56f5TfAk\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"lib/account-abstraction/contracts/samples/SimpleAccount.sol\":{\"keccak256\":\"0x295bb73ecafb78a11e7418cc91d5f3c7f5fd5b2eba5e063d1e7d6bb6163192d4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7c7f1546b6880ec112761fd36465c5730611ca9b15e3121c2e3c494ee3f9b3ce\",\"dweb:/ipfs/QmPDJv3UTPSvrEoCUEhxTa2CoDmciwougiX3mmRTHcV5gB\"]},\"lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3\",\"dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/PasskeyAccount.sol\":{\"keccak256\":\"0xd92ac258ff00818953f3be3650904592ad6b5685f08b4f070f703ad5c709d4ee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ea3632dace71a75fa36c7c1207a45c3f9045a329ad3c08982182a857d05e5628\",\"dweb:/ipfs/QmdhHuznSky3B5mxbRWz4j3HKCZwgAXbLbwPbDYZWipxNq\"]},\"src/PasskeyAccountFactory.sol\":{\"keccak256\":\"0x50e20ee7680641f84a36924d047d13cea1b19fdc197bb29df835d61eb31a9922\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b8a7ff2276e90f8913e4fa60b26ebf7bd3340f57fce3d6646ce942eff1525b94\",\"dweb:/ipfs/QmbwNKBjEiafebA6qG92unKremp68B17df7g9cUNBgjaNS\"]},\"src/lib/base64url/Base64Url.sol\":{\"keccak256\":\"0x60c85b8d2d88cf3213c30c19718b0db308ffc62ab3656bfa25cd336cdef092b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e65923a2cb0386cf8c6c25bc70084d0dd4cb55d57a8c39d66abbed49c97f5009\",\"dweb:/ipfs/QmR4EVGMvKxqSJoeWGC1WJyGAwZEtHE5PuvKxi8giAewnS\"]},\"src/lib/p256-verifier/P256.sol\":{\"keccak256\":\"0x429362ea57ac7c266cc3d6a4cfcb1626133a74fa16bc90ca94d7266e8c3a83a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfe9e13588ba9a2a37cef0e844afb392079162dbc5e33757c67d058d713351e2\",\"dweb:/ipfs/Qmar5MN3USYz8QWuZN4kiYdbWmwAETZKXhkMvC2KcSnE3f\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "userId",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "UserIdTaken"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "_userMap",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "credentialId",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "y",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "accountImplementation",
          "outputs": [
            {
              "internalType": "contract PasskeyAccount",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "userId",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "credentialId",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "y",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAccount",
          "outputs": [
            {
              "internalType": "contract PasskeyAccount",
              "name": "ret",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "credentialId",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "y",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "userId",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUser",
          "outputs": [
            {
              "internalType": "struct PasskeyAccountFactory.User",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "credentialId",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "x",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "y",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createAccount(string,bytes,uint256,uint256,uint256)": {
            "notice": "create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
          },
          "getAddress(bytes,uint256,uint256,uint256)": {
            "notice": "calculate the counterfactual address of this account as it would be returned by createAccount()"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@account-abstraction/=lib/account-abstraction/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "account-abstraction/=lib/account-abstraction/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PasskeyAccountFactory.sol": "PasskeyAccountFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/BaseAccount.sol": {
        "keccak256": "0x5eb3253b32fd8ba8ae7b9d83da8e9924254a4d3d17a8772b41280e8572974b3c",
        "urls": [
          "bzz-raw://b2d23d1276f85300e2ad0c7219614a072796b4f5581fd552b0bcaa47904400d3",
          "dweb:/ipfs/QmVWK5WZ3VskNTfCBxLqY4xBP7WGm3cRM9Qhdy56f5TfAk"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a",
        "urls": [
          "bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746",
          "dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAccount.sol": {
        "keccak256": "0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418",
        "urls": [
          "bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4",
          "dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a",
        "urls": [
          "bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b",
          "dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8",
        "urls": [
          "bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf",
          "dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12",
        "urls": [
          "bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2",
          "dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f",
        "urls": [
          "bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3",
          "dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c",
        "urls": [
          "bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c",
          "dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/samples/SimpleAccount.sol": {
        "keccak256": "0x295bb73ecafb78a11e7418cc91d5f3c7f5fd5b2eba5e063d1e7d6bb6163192d4",
        "urls": [
          "bzz-raw://7c7f1546b6880ec112761fd36465c5730611ca9b15e3121c2e3c494ee3f9b3ce",
          "dweb:/ipfs/QmPDJv3UTPSvrEoCUEhxTa2CoDmciwougiX3mmRTHcV5gB"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol": {
        "keccak256": "0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752",
        "urls": [
          "bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3",
          "dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
        "urls": [
          "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
          "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf",
        "urls": [
          "bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1",
          "dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Create2.sol": {
        "keccak256": "0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89",
        "urls": [
          "bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447",
          "dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/PasskeyAccount.sol": {
        "keccak256": "0xd92ac258ff00818953f3be3650904592ad6b5685f08b4f070f703ad5c709d4ee",
        "urls": [
          "bzz-raw://ea3632dace71a75fa36c7c1207a45c3f9045a329ad3c08982182a857d05e5628",
          "dweb:/ipfs/QmdhHuznSky3B5mxbRWz4j3HKCZwgAXbLbwPbDYZWipxNq"
        ],
        "license": "GPL-3.0"
      },
      "src/PasskeyAccountFactory.sol": {
        "keccak256": "0x50e20ee7680641f84a36924d047d13cea1b19fdc197bb29df835d61eb31a9922",
        "urls": [
          "bzz-raw://b8a7ff2276e90f8913e4fa60b26ebf7bd3340f57fce3d6646ce942eff1525b94",
          "dweb:/ipfs/QmbwNKBjEiafebA6qG92unKremp68B17df7g9cUNBgjaNS"
        ],
        "license": "GPL-3.0"
      },
      "src/lib/base64url/Base64Url.sol": {
        "keccak256": "0x60c85b8d2d88cf3213c30c19718b0db308ffc62ab3656bfa25cd336cdef092b9",
        "urls": [
          "bzz-raw://e65923a2cb0386cf8c6c25bc70084d0dd4cb55d57a8c39d66abbed49c97f5009",
          "dweb:/ipfs/QmR4EVGMvKxqSJoeWGC1WJyGAwZEtHE5PuvKxi8giAewnS"
        ],
        "license": "MIT"
      },
      "src/lib/p256-verifier/P256.sol": {
        "keccak256": "0x429362ea57ac7c266cc3d6a4cfcb1626133a74fa16bc90ca94d7266e8c3a83a9",
        "urls": [
          "bzz-raw://bfe9e13588ba9a2a37cef0e844afb392079162dbc5e33757c67d058d713351e2",
          "dweb:/ipfs/Qmar5MN3USYz8QWuZN4kiYdbWmwAETZKXhkMvC2KcSnE3f"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PasskeyAccountFactory.sol",
    "id": 50432,
    "exportedSymbols": {
      "Address": [
        47449
      ],
      "Base64Url": [
        50478
      ],
      "BaseAccount": [
        141
      ],
      "Create2": [
        47552
      ],
      "ECDSA": [
        48257
      ],
      "ERC1967Proxy": [
        45374
      ],
      "ERC1967Upgrade": [
        45678
      ],
      "IAccount": [
        397
      ],
      "IAggregator": [
        431
      ],
      "IBeacon": [
        45740
      ],
      "IERC1155Receiver": [
        46174
      ],
      "IERC165": [
        48293
      ],
      "IERC1822Proxiable": [
        45337
      ],
      "IERC1967": [
        45327
      ],
      "IERC721Receiver": [
        47099
      ],
      "IERC777Recipient": [
        47119
      ],
      "IEntryPoint": [
        637
      ],
      "INonceManager": [
        656
      ],
      "IStakeManager": [
        762
      ],
      "Initializable": [
        45909
      ],
      "Math": [
        49159
      ],
      "P256": [
        50683
      ],
      "PasskeyAccount": [
        50221
      ],
      "PasskeyAccountFactory": [
        50431
      ],
      "Proxy": [
        45730
      ],
      "SignedMath": [
        49264
      ],
      "SimpleAccount": [
        1284
      ],
      "StorageSlot": [
        47662
      ],
      "Strings": [
        47891
      ],
      "TokenCallbackHandler": [
        1408
      ],
      "UUPSUpgradeable": [
        46025
      ],
      "UserOperation": [
        790
      ],
      "UserOperationLib": [
        960
      ],
      "ValidationData": [
        151
      ],
      "_intersectTimeRange": [
        295
      ],
      "_packValidationData": [
        332,
        370
      ],
      "_parseValidationData": [
        210
      ],
      "calldataKeccak": [
        380
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:3428:65",
    "nodes": [
      {
        "id": 50223,
        "nodeType": "PragmaDirective",
        "src": "36:24:65",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 50224,
        "nodeType": "ImportDirective",
        "src": "62:51:65",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Create2.sol",
        "file": "@openzeppelin/contracts/utils/Create2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50432,
        "sourceUnit": 47553,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50225,
        "nodeType": "ImportDirective",
        "src": "114:64:65",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50432,
        "sourceUnit": 45375,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50226,
        "nodeType": "ImportDirective",
        "src": "180:30:65",
        "nodes": [],
        "absolutePath": "src/PasskeyAccount.sol",
        "file": "./PasskeyAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50432,
        "sourceUnit": 50222,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50431,
        "nodeType": "ContractDefinition",
        "src": "602:2861:65",
        "nodes": [
          {
            "id": 50231,
            "nodeType": "ErrorDefinition",
            "src": "639:33:65",
            "nodes": [],
            "errorSelector": "242697d2",
            "name": "UserIdTaken",
            "nameLocation": "645:11:65",
            "parameters": {
              "id": 50230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50229,
                  "mutability": "mutable",
                  "name": "userId",
                  "nameLocation": "664:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50231,
                  "src": "657:13:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50228,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:6:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "656:15:65"
            }
          },
          {
            "id": 50240,
            "nodeType": "StructDefinition",
            "src": "678:107:65",
            "nodes": [],
            "canonicalName": "PasskeyAccountFactory.User",
            "members": [
              {
                "constant": false,
                "id": 50233,
                "mutability": "mutable",
                "name": "credentialId",
                "nameLocation": "706:12:65",
                "nodeType": "VariableDeclaration",
                "scope": 50240,
                "src": "700:18:65",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 50232,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "700:5:65",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50235,
                "mutability": "mutable",
                "name": "x",
                "nameLocation": "736:1:65",
                "nodeType": "VariableDeclaration",
                "scope": 50240,
                "src": "728:9:65",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50234,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "728:7:65",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50237,
                "mutability": "mutable",
                "name": "y",
                "nameLocation": "755:1:65",
                "nodeType": "VariableDeclaration",
                "scope": 50240,
                "src": "747:9:65",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50236,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "747:7:65",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50239,
                "mutability": "mutable",
                "name": "salt",
                "nameLocation": "774:4:65",
                "nodeType": "VariableDeclaration",
                "scope": 50240,
                "src": "766:12:65",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50238,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "766:7:65",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "685:4:65",
            "scope": 50431,
            "visibility": "public"
          },
          {
            "id": 50243,
            "nodeType": "VariableDeclaration",
            "src": "791:53:65",
            "nodes": [],
            "constant": false,
            "functionSelector": "11464fbe",
            "mutability": "immutable",
            "name": "accountImplementation",
            "nameLocation": "823:21:65",
            "scope": 50431,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
              "typeString": "contract PasskeyAccount"
            },
            "typeName": {
              "id": 50242,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50241,
                "name": "PasskeyAccount",
                "nameLocations": [
                  "791:14:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50221,
                "src": "791:14:65"
              },
              "referencedDeclaration": 50221,
              "src": "791:14:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                "typeString": "contract PasskeyAccount"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50246,
            "nodeType": "VariableDeclaration",
            "src": "850:39:65",
            "nodes": [],
            "constant": false,
            "functionSelector": "b0d691fe",
            "mutability": "immutable",
            "name": "entryPoint",
            "nameLocation": "879:10:65",
            "scope": 50431,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEntryPoint_$637",
              "typeString": "contract IEntryPoint"
            },
            "typeName": {
              "id": 50245,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50244,
                "name": "IEntryPoint",
                "nameLocations": [
                  "850:11:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 637,
                "src": "850:11:65"
              },
              "referencedDeclaration": 637,
              "src": "850:11:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEntryPoint_$637",
                "typeString": "contract IEntryPoint"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50251,
            "nodeType": "VariableDeclaration",
            "src": "896:39:65",
            "nodes": [],
            "constant": false,
            "functionSelector": "9932afb2",
            "mutability": "mutable",
            "name": "_userMap",
            "nameLocation": "927:8:65",
            "scope": 50431,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$50240_storage_$",
              "typeString": "mapping(string => struct PasskeyAccountFactory.User)"
            },
            "typeName": {
              "id": 50250,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 50247,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "904:6:65",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "896:23:65",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$50240_storage_$",
                "typeString": "mapping(string => struct PasskeyAccountFactory.User)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 50249,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50248,
                  "name": "User",
                  "nameLocations": [
                    "914:4:65"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50240,
                  "src": "914:4:65"
                },
                "referencedDeclaration": 50240,
                "src": "914:4:65",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$50240_storage_ptr",
                  "typeString": "struct PasskeyAccountFactory.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 50270,
            "nodeType": "FunctionDefinition",
            "src": "960:143:65",
            "nodes": [],
            "body": {
              "id": 50269,
              "nodeType": "Block",
              "src": "997:106:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50257,
                      "name": "accountImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50243,
                      "src": "1007:21:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                        "typeString": "contract PasskeyAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50261,
                          "name": "_entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50254,
                          "src": "1050:11:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$637",
                            "typeString": "contract IEntryPoint"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEntryPoint_$637",
                            "typeString": "contract IEntryPoint"
                          }
                        ],
                        "id": 50260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1031:18:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IEntryPoint_$637_$returns$_t_contract$_PasskeyAccount_$50221_$",
                          "typeString": "function (contract IEntryPoint) returns (contract PasskeyAccount)"
                        },
                        "typeName": {
                          "id": 50259,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50258,
                            "name": "PasskeyAccount",
                            "nameLocations": [
                              "1035:14:65"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 50221,
                            "src": "1035:14:65"
                          },
                          "referencedDeclaration": 50221,
                          "src": "1035:14:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                            "typeString": "contract PasskeyAccount"
                          }
                        }
                      },
                      "id": 50262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1031:31:65",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                        "typeString": "contract PasskeyAccount"
                      }
                    },
                    "src": "1007:55:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                      "typeString": "contract PasskeyAccount"
                    }
                  },
                  "id": 50264,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:55:65"
                },
                {
                  "expression": {
                    "id": 50267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50265,
                      "name": "entryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50246,
                      "src": "1072:10:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEntryPoint_$637",
                        "typeString": "contract IEntryPoint"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50266,
                      "name": "_entryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50254,
                      "src": "1085:11:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEntryPoint_$637",
                        "typeString": "contract IEntryPoint"
                      }
                    },
                    "src": "1072:24:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$637",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "id": 50268,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:24:65"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50254,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "984:11:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50270,
                  "src": "972:23:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$637",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 50253,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50252,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "972:11:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 637,
                      "src": "972:11:65"
                    },
                    "referencedDeclaration": 637,
                    "src": "972:11:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$637",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:25:65"
            },
            "returnParameters": {
              "id": 50256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:65"
            },
            "scope": 50431,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50369,
            "nodeType": "FunctionDefinition",
            "src": "1483:999:65",
            "nodes": [],
            "body": {
              "id": 50368,
              "nodeType": "Block",
              "src": "1677:805:65",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 50287,
                            "name": "_userMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50251,
                            "src": "1691:8:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$50240_storage_$",
                              "typeString": "mapping(string memory => struct PasskeyAccountFactory.User storage ref)"
                            }
                          },
                          "id": 50289,
                          "indexExpression": {
                            "id": 50288,
                            "name": "userId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50273,
                            "src": "1700:6:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1691:16:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$50240_storage",
                            "typeString": "struct PasskeyAccountFactory.User storage ref"
                          }
                        },
                        "id": 50290,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1708:12:65",
                        "memberName": "credentialId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50233,
                        "src": "1691:29:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 50291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1721:6:65",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1691:36:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 50292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1730:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1691:40:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50299,
                  "nodeType": "IfStatement",
                  "src": "1687:97:65",
                  "trueBody": {
                    "id": 50298,
                    "nodeType": "Block",
                    "src": "1733:51:65",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 50295,
                              "name": "userId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50273,
                              "src": "1766:6:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 50294,
                            "name": "UserIdTaken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50231,
                            "src": "1754:11:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 50296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1754:19:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50297,
                        "nodeType": "RevertStatement",
                        "src": "1747:26:65"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    50301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50301,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1802:4:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 50368,
                      "src": "1794:12:65",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 50300,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1794:7:65",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50308,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50303,
                        "name": "credentialId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50275,
                        "src": "1820:12:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 50304,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50277,
                        "src": "1834:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50305,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50279,
                        "src": "1837:1:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50306,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50281,
                        "src": "1840:4:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50302,
                      "name": "getAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50417,
                      "src": "1809:10:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (bytes calldata,uint256,uint256,uint256) view returns (address)"
                      }
                    },
                    "id": 50307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:36:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1794:51:65"
                },
                {
                  "assignments": [
                    50310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50310,
                      "mutability": "mutable",
                      "name": "codeSize",
                      "nameLocation": "1860:8:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 50368,
                      "src": "1855:13:65",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50309,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1855:4:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50314,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 50311,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50301,
                        "src": "1871:4:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 50312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1876:4:65",
                      "memberName": "code",
                      "nodeType": "MemberAccess",
                      "src": "1871:9:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "id": 50313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1881:6:65",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1871:16:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1855:32:65"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50315,
                      "name": "codeSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50310,
                      "src": "1901:8:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 50316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1912:1:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1901:12:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50326,
                  "nodeType": "IfStatement",
                  "src": "1897:79:65",
                  "trueBody": {
                    "id": 50325,
                    "nodeType": "Block",
                    "src": "1915:61:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 50321,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50301,
                                  "src": "1959:4:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 50320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1951:8:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 50319,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1951:8:65",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 50322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1951:13:65",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 50318,
                            "name": "PasskeyAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50221,
                            "src": "1936:14:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PasskeyAccount_$50221_$",
                              "typeString": "type(contract PasskeyAccount)"
                            }
                          },
                          "id": 50323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1936:29:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                            "typeString": "contract PasskeyAccount"
                          }
                        },
                        "functionReturnParameters": 50286,
                        "id": 50324,
                        "nodeType": "Return",
                        "src": "1929:36:65"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 50355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50327,
                      "name": "ret",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50285,
                      "src": "1985:3:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                        "typeString": "contract PasskeyAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 50341,
                                      "name": "accountImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50243,
                                      "src": "2111:21:65",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                                        "typeString": "contract PasskeyAccount"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                                        "typeString": "contract PasskeyAccount"
                                      }
                                    ],
                                    "id": 50340,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2103:7:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 50339,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2103:7:65",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 50342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2103:30:65",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 50345,
                                        "name": "PasskeyAccount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50221,
                                        "src": "2195:14:65",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_PasskeyAccount_$50221_$",
                                          "typeString": "type(contract PasskeyAccount)"
                                        }
                                      },
                                      "id": 50346,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2210:10:65",
                                      "memberName": "initialize",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 50115,
                                      "src": "2195:25:65",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                                        "typeString": "function PasskeyAccount.initialize(bytes calldata,uint256,uint256)"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 50347,
                                          "name": "credentialId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 50275,
                                          "src": "2247:12:65",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                            "typeString": "bytes calldata"
                                          }
                                        },
                                        {
                                          "id": 50348,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 50277,
                                          "src": "2261:1:65",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 50349,
                                          "name": "y",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 50279,
                                          "src": "2264:1:65",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 50350,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "2246:20:65",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$",
                                        "typeString": "tuple(bytes calldata,uint256,uint256)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                                        "typeString": "function PasskeyAccount.initialize(bytes calldata,uint256,uint256)"
                                      },
                                      {
                                        "typeIdentifier": "t_tuple$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$",
                                        "typeString": "tuple(bytes calldata,uint256,uint256)"
                                      }
                                    ],
                                    "expression": {
                                      "id": 50343,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "2155:3:65",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 50344,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2159:10:65",
                                    "memberName": "encodeCall",
                                    "nodeType": "MemberAccess",
                                    "src": "2155:14:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 50351,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2155:133:65",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 50333,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "2044:16:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$45374_$",
                                    "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                  },
                                  "typeName": {
                                    "id": 50332,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 50331,
                                      "name": "ERC1967Proxy",
                                      "nameLocations": [
                                        "2048:12:65"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 45374,
                                      "src": "2048:12:65"
                                    },
                                    "referencedDeclaration": 45374,
                                    "src": "2048:12:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC1967Proxy_$45374",
                                      "typeString": "contract ERC1967Proxy"
                                    }
                                  }
                                },
                                "id": 50338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "salt"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 50336,
                                        "name": "salt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50281,
                                        "src": "2075:4:65",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 50335,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2067:7:65",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 50334,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2067:7:65",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 50337,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2067:13:65",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "src": "2044:37:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$45374_$salt",
                                  "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                }
                              },
                              "id": 50352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2044:262:65",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$45374",
                                "typeString": "contract ERC1967Proxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$45374",
                                "typeString": "contract ERC1967Proxy"
                              }
                            ],
                            "id": 50330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2019:8:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 50329,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2019:8:65",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2019:301:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 50328,
                        "name": "PasskeyAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50221,
                        "src": "1991:14:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PasskeyAccount_$50221_$",
                          "typeString": "type(contract PasskeyAccount)"
                        }
                      },
                      "id": 50354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1991:339:65",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                        "typeString": "contract PasskeyAccount"
                      }
                    },
                    "src": "1985:345:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                      "typeString": "contract PasskeyAccount"
                    }
                  },
                  "id": 50356,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:345:65"
                },
                {
                  "expression": {
                    "id": 50366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50357,
                        "name": "_userMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50251,
                        "src": "2340:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$50240_storage_$",
                          "typeString": "mapping(string memory => struct PasskeyAccountFactory.User storage ref)"
                        }
                      },
                      "id": 50359,
                      "indexExpression": {
                        "id": 50358,
                        "name": "userId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50273,
                        "src": "2349:6:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2340:16:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$50240_storage",
                        "typeString": "struct PasskeyAccountFactory.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50361,
                          "name": "credentialId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50275,
                          "src": "2392:12:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        {
                          "id": 50362,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50277,
                          "src": "2421:1:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 50363,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50279,
                          "src": "2439:1:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 50364,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50281,
                          "src": "2460:4:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 50360,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50240,
                        "src": "2359:4:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_User_$50240_storage_ptr_$",
                          "typeString": "type(struct PasskeyAccountFactory.User storage pointer)"
                        }
                      },
                      "id": 50365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "2378:12:65",
                        "2418:1:65",
                        "2436:1:65",
                        "2454:4:65"
                      ],
                      "names": [
                        "credentialId",
                        "x",
                        "y",
                        "salt"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2359:116:65",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$50240_memory_ptr",
                        "typeString": "struct PasskeyAccountFactory.User memory"
                      }
                    },
                    "src": "2340:135:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$50240_storage",
                      "typeString": "struct PasskeyAccountFactory.User storage ref"
                    }
                  },
                  "id": 50367,
                  "nodeType": "ExpressionStatement",
                  "src": "2340:135:65"
                }
              ]
            },
            "documentation": {
              "id": 50271,
              "nodeType": "StructuredDocumentation",
              "src": "1109:369:65",
              "text": " create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
            },
            "functionSelector": "6820b6e2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAccount",
            "nameLocation": "1492:13:65",
            "parameters": {
              "id": 50282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50273,
                  "mutability": "mutable",
                  "name": "userId",
                  "nameLocation": "1531:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50369,
                  "src": "1515:22:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50272,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1515:6:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50275,
                  "mutability": "mutable",
                  "name": "credentialId",
                  "nameLocation": "1562:12:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50369,
                  "src": "1547:27:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50274,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1547:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50277,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "1592:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50369,
                  "src": "1584:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50279,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "1611:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50369,
                  "src": "1603:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1603:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50281,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1630:4:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50369,
                  "src": "1622:12:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1622:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1505:135:65"
            },
            "returnParameters": {
              "id": 50286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50285,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1672:3:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50369,
                  "src": "1657:18:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                    "typeString": "contract PasskeyAccount"
                  },
                  "typeName": {
                    "id": 50284,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50283,
                      "name": "PasskeyAccount",
                      "nameLocations": [
                        "1657:14:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50221,
                      "src": "1657:14:65"
                    },
                    "referencedDeclaration": 50221,
                    "src": "1657:14:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                      "typeString": "contract PasskeyAccount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1656:20:65"
            },
            "scope": 50431,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50417,
            "nodeType": "FunctionDefinition",
            "src": "2607:727:65",
            "nodes": [],
            "body": {
              "id": 50416,
              "nodeType": "Block",
              "src": "2760:574:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50387,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50378,
                            "src": "2837:4:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 50386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2829:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 50385,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2829:7:65",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2829:13:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 50393,
                                      "name": "ERC1967Proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45374,
                                      "src": "2938:12:65",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$45374_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$45374_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    ],
                                    "id": 50392,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "2933:4:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 50394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2933:18:65",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_ERC1967Proxy_$45374",
                                    "typeString": "type(contract ERC1967Proxy)"
                                  }
                                },
                                "id": 50395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2952:12:65",
                                "memberName": "creationCode",
                                "nodeType": "MemberAccess",
                                "src": "2933:31:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 50400,
                                        "name": "accountImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50243,
                                        "src": "3038:21:65",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                                          "typeString": "contract PasskeyAccount"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_PasskeyAccount_$50221",
                                          "typeString": "contract PasskeyAccount"
                                        }
                                      ],
                                      "id": 50399,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3030:7:65",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 50398,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3030:7:65",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 50401,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3030:30:65",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 50404,
                                          "name": "PasskeyAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 50221,
                                          "src": "3138:14:65",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_PasskeyAccount_$50221_$",
                                            "typeString": "type(contract PasskeyAccount)"
                                          }
                                        },
                                        "id": 50405,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "3153:10:65",
                                        "memberName": "initialize",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 50115,
                                        "src": "3138:25:65",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function PasskeyAccount.initialize(bytes calldata,uint256,uint256)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 50406,
                                            "name": "credentialId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 50372,
                                            "src": "3198:12:65",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_calldata_ptr",
                                              "typeString": "bytes calldata"
                                            }
                                          },
                                          {
                                            "id": 50407,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 50374,
                                            "src": "3212:1:65",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 50408,
                                            "name": "y",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 50376,
                                            "src": "3215:1:65",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 50409,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "3197:20:65",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(bytes calldata,uint256,uint256)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function PasskeyAccount.initialize(bytes calldata,uint256,uint256)"
                                        },
                                        {
                                          "typeIdentifier": "t_tuple$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(bytes calldata,uint256,uint256)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 50402,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "3090:3:65",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 50403,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "3094:10:65",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "3090:14:65",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 50410,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3090:157:65",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 50396,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2990:3:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 50397,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2994:6:65",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "2990:10:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 50411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2990:283:65",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 50390,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2891:3:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 50391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2895:12:65",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2891:16:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 50412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2891:404:65",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 50389,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2860:9:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 50413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2860:453:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 50383,
                        "name": "Create2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47552,
                        "src": "2789:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Create2_$47552_$",
                          "typeString": "type(library Create2)"
                        }
                      },
                      "id": 50384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2797:14:65",
                      "memberName": "computeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47537,
                      "src": "2789:22:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 50414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2789:538:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 50382,
                  "id": 50415,
                  "nodeType": "Return",
                  "src": "2770:557:65"
                }
              ]
            },
            "documentation": {
              "id": 50370,
              "nodeType": "StructuredDocumentation",
              "src": "2488:114:65",
              "text": " calculate the counterfactual address of this account as it would be returned by createAccount()"
            },
            "functionSelector": "70f57d08",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "2616:10:65",
            "parameters": {
              "id": 50379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50372,
                  "mutability": "mutable",
                  "name": "credentialId",
                  "nameLocation": "2651:12:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50417,
                  "src": "2636:27:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50371,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50374,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "2681:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50417,
                  "src": "2673:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2673:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50376,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "2700:1:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50417,
                  "src": "2692:9:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2692:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50378,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "2719:4:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50417,
                  "src": "2711:12:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2711:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2626:103:65"
            },
            "returnParameters": {
              "id": 50382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50381,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50417,
                  "src": "2751:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2751:7:65",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2750:9:65"
            },
            "scope": 50431,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50430,
            "nodeType": "FunctionDefinition",
            "src": "3344:117:65",
            "nodes": [],
            "body": {
              "id": 50429,
              "nodeType": "Block",
              "src": "3421:40:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 50425,
                      "name": "_userMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50251,
                      "src": "3438:8:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$50240_storage_$",
                        "typeString": "mapping(string memory => struct PasskeyAccountFactory.User storage ref)"
                      }
                    },
                    "id": 50427,
                    "indexExpression": {
                      "id": 50426,
                      "name": "userId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50419,
                      "src": "3447:6:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3438:16:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$50240_storage",
                      "typeString": "struct PasskeyAccountFactory.User storage ref"
                    }
                  },
                  "functionReturnParameters": 50424,
                  "id": 50428,
                  "nodeType": "Return",
                  "src": "3431:23:65"
                }
              ]
            },
            "functionSelector": "31feb671",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUser",
            "nameLocation": "3353:7:65",
            "parameters": {
              "id": 50420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50419,
                  "mutability": "mutable",
                  "name": "userId",
                  "nameLocation": "3377:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 50430,
                  "src": "3361:22:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50418,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3361:6:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3360:24:65"
            },
            "returnParameters": {
              "id": 50424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50423,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50430,
                  "src": "3408:11:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$50240_memory_ptr",
                    "typeString": "struct PasskeyAccountFactory.User"
                  },
                  "typeName": {
                    "id": 50422,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50421,
                      "name": "User",
                      "nameLocations": [
                        "3408:4:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50240,
                      "src": "3408:4:65"
                    },
                    "referencedDeclaration": 50240,
                    "src": "3408:4:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$50240_storage_ptr",
                      "typeString": "struct PasskeyAccountFactory.User"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3407:13:65"
            },
            "scope": 50431,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PasskeyAccountFactory",
        "contractDependencies": [
          45374,
          50221
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 50227,
          "nodeType": "StructuredDocumentation",
          "src": "212:389:65",
          "text": " A sample factory contract for PasskeyAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50431
        ],
        "name": "PasskeyAccountFactory",
        "nameLocation": "611:21:65",
        "scope": 50432,
        "usedErrors": [
          50231
        ],
        "usedEvents": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 65
}